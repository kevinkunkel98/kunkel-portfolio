---
import BaseLayout from '../layouts/BaseLayout.astro';
import ProjectCard from '../components/ProjectCard';

// Kevin's actual projects data
const allProjects = [
  {
    title: "FSR Rag Chat Assistant",
    description: "The FSR Rag Chat Assistant is a Retrieval Augmented Generation (RAG) chatbot designed to support the student council of the computer science faculty at the University of Leipzig." +
        "\n",
    technologies: ["Ollama", "Spring AI", "React", "ShadcnUI", "PGVector Store"],
    category: "ML" as const,
    githubUrl: "https://github.com/kevinkunkel/neural-style-transfer",
      imageUrl: "/assets/fsrchat.png"
  },
  {
    title: "Computer Science Faculty Website",
    description: "Web presence static page that displays all relevent informations, news and events related to the elected council members of the computer science faculty at the University of Leipzig.",
    technologies: ["Astro.js", "Node.js", "Flowbite", "Netlify",],
    category: "WebDev" as const,
    liveUrl: "https://fsinf.informatik.uni-leipzig.de/",
    imageUrl: "/assets/fsinf.png"
  },
  {
    title: "90s Forum Post SVM Classifier",
    description: "Support Vector Machine that classifies forum posts from the 90s into different topics based on their content using TF-IDF vectorization and gives insigns into early internet shitposting.",
    technologies: ["Scikit-learn\n", "Kaggle", "FastAPI", "CUDA"],
    category: "ML" as const,
    githubUrl: "https://github.com/kevinkunkel/yolo-detection",
    imageUrl: "/assets/netscape.jpg"
  },
  {
    title: "Vilkulakis - The Online Game",
    description: "Online Real Time Multiplayer of the card game Werwolves that has one lobby and supports 20 active players with a chat gui",
    technologies: ["Node.js", "Docker", "Redis", "PostgreSQL", "GraphQL"],
    category: "WebDev" as const,
    githubUrl: "https://github.com/kevinkunkel/microservices-ecommerce",
    liveUrl: "https://api.kevinkunkel.dev",
    imageUrl: "/assets/vilkulakis.png"
  },
  {
    title: "Study BrAIn - Study Smarter Chat",
    description: "RAG Chat that helps you study and chat with your lecture slides and embedd notes using GPT 3.5 and PGVe ChromaDB.",
    technologies: ["Flask", "Bootstrap", "Langchain", "ChromaDB"],
    category: "ML" as const,
    githubUrl: "https://github.com/kevinkunkel98/Study-Brain-Chatbot",
    imageUrl: "/assets/studybrain.png"
  },
  {
    title: "Linux Dev Blog and Portfolio Website",
    description: "My first real portfolio website that I used to document my journey into web development and Arch Linux customizations.",
    technologies: ["AstroJS", "React", "Express", "Tailwind"],
    category: "WebDev" as const,
    githubUrl: "https://github.com/kevinkunkel/webrtc-platform",
    liveUrl: "https://chat.kevinkunkel.dev",
    imageUrl: "/assets/devblog.png"
  }
];

const mlProjects = allProjects.filter(project => project.category === 'ML');
const webDevProjects = allProjects.filter(project => project.category === 'WebDev');
---

<BaseLayout title="Projects - My Work Portfolio" description="Explore my machine learning and web development projects">
  <!-- Global Space Background -->
  <div class="fixed inset-0 -z-10 overflow-hidden">
    <div class="absolute inset-0 bg-gradient-to-b from-black via-black to-slate-950"></div>

    <!-- Deep space gradient layers -->
    <div class="absolute inset-0 bg-[radial-gradient(ellipse_at_top,_var(--tw-gradient-stops))] from-purple-950/20 via-slate-950/40 to-black"></div>

    <!-- Large nebula effects -->
    <div class="absolute top-0 left-1/4 w-[600px] h-[600px] bg-purple-900/10 rounded-full blur-[120px] animate-pulse"></div>
    <div class="absolute top-1/3 right-1/4 w-[500px] h-[500px] bg-blue-900/8 rounded-full blur-[100px] animate-pulse" style="animation-delay: 1s;"></div>
    <div class="absolute bottom-1/4 left-1/3 w-[550px] h-[550px] bg-indigo-900/10 rounded-full blur-[110px] animate-pulse" style="animation-delay: 2s;"></div>
    <div class="absolute top-1/2 right-1/3 w-[450px] h-[450px] bg-pink-900/8 rounded-full blur-[90px] animate-pulse" style="animation-delay: 1.5s;"></div>

    <!-- Star field effect -->
    <div class="absolute inset-0 opacity-30">
      <div class="absolute top-[10%] left-[15%] w-1 h-1 bg-white rounded-full animate-pulse"></div>
      <div class="absolute top-[20%] left-[80%] w-1 h-1 bg-white rounded-full animate-pulse" style="animation-delay: 0.5s;"></div>
      <div class="absolute top-[40%] left-[25%] w-0.5 h-0.5 bg-blue-200 rounded-full animate-pulse" style="animation-delay: 1s;"></div>
      <div class="absolute top-[60%] left-[70%] w-1 h-1 bg-purple-200 rounded-full animate-pulse" style="animation-delay: 1.5s;"></div>
      <div class="absolute top-[80%] left-[40%] w-0.5 h-0.5 bg-white rounded-full animate-pulse" style="animation-delay: 2s;"></div>
      <div class="absolute top-[30%] left-[60%] w-1 h-1 bg-indigo-200 rounded-full animate-pulse" style="animation-delay: 0.8s;"></div>
      <div class="absolute top-[70%] left-[20%] w-0.5 h-0.5 bg-pink-200 rounded-full animate-pulse" style="animation-delay: 1.2s;"></div>
      <div class="absolute top-[50%] left-[90%] w-1 h-1 bg-white rounded-full animate-pulse" style="animation-delay: 1.8s;"></div>
    </div>
  </div>

  <div class="min-h-screen">
    <!-- Terminal Header Section -->
    <section class="py-12 sm:py-16 relative">
      <div class="max-w-7xl mx-auto px-3 sm:px-6 lg:px-8">
        <div class="text-center font-mono">
          <div class="text-xl sm:text-2xl md:text-4xl text-green-400 mb-3 sm:mb-4">
            ls -la ./projects/
          </div>
          <div class="text-gray-400 text-xs sm:text-sm max-w-3xl mx-auto px-2">
            # Listing repository contents: ML models, web applications, and experimental solutions
          </div>
        </div>
      </div>
    </section>

    <!-- Terminal Projects Section -->
    <section class="py-12 sm:py-16 relative">
      <div class="max-w-7xl mx-auto px-3 sm:px-6 lg:px-8">
        <!-- Terminal Filter Tabs -->
        <div class="flex flex-wrap justify-center gap-2 sm:gap-4 mb-8 sm:mb-12 font-mono overflow-x-auto pb-2" id="project-filters">
          <button
            class="filter-btn active px-3 py-1.5 sm:px-4 sm:py-2 text-xs sm:text-sm transition-colors text-green-400 border border-green-400/50 bg-green-400/10 whitespace-nowrap"
            data-filter="all"
          >
            <span class="text-blue-400">./</span>all
          </button>
            <button
            class="filter-btn px-3 py-1.5 sm:px-4 sm:py-2 text-xs sm:text-sm transition-colors text-gray-400 hover:text-white border border-gray-600 hover:border-gray-400 whitespace-nowrap"
            data-filter="ML"
          >
            <span class="text-blue-400">./</span>machine_learning
          </button>
          <button
            class="filter-btn px-3 py-1.5 sm:px-4 sm:py-2 text-xs sm:text-sm transition-colors text-gray-400 hover:text-white border border-gray-600 hover:border-gray-400 whitespace-nowrap"
            data-filter="WebDev"
          >
            <span class="text-blue-400">./</span>web_development
          </button>
      </div>

      <!-- Projects Grid -->
      <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 sm:gap-8" id="projects-grid">
        {allProjects.map((project) => (
          <div class="project-item" data-category={project.category}>
            <ProjectCard project={project} client:load />
          </div>
        ))}
      </div>
    </div>
  </section>

    <!-- Terminal Stats Section -->
    <section class="py-12 sm:py-16">
      <div class="max-w-7xl mx-auto px-3 sm:px-6 lg:px-8">
        <div class="bg-black/40 backdrop-blur-sm border border-gray-700/50 rounded-lg p-6 sm:p-8 font-mono">
          <div class="text-green-400 text-base sm:text-lg mb-4 sm:mb-6 overflow-x-auto">
            <span class="text-blue-400">$</span> <span class="whitespace-nowrap">wc -l ./projects/**/*</span>
          </div>
          <div class="grid grid-cols-1 sm:grid-cols-3 gap-6 sm:gap-8">
            <div class="text-center">
              <div class="text-3xl sm:text-4xl font-bold text-green-400 mb-2">{allProjects.length}</div>
              <div class="text-gray-400 text-sm">total_projects</div>
            </div>
            <div class="text-center">
              <div class="text-3xl sm:text-4xl font-bold text-blue-400 mb-2">{mlProjects.length}</div>
              <div class="text-gray-400 text-sm">ml_models</div>
            </div>
            <div class="text-center">
              <div class="text-3xl sm:text-4xl font-bold text-purple-400 mb-2">{webDevProjects.length}</div>
              <div class="text-gray-400 text-sm">web_apps</div>
            </div>
          </div>
        </div>
      </section>

      <!-- Terminal CTA Section -->
      <section class="py-12 sm:py-16">
        <div class="max-w-7xl mx-auto px-3 sm:px-6 lg:px-8">
          <div class="bg-black/40 backdrop-blur-sm border border-gray-700/50 rounded-lg p-6 sm:p-8 text-center font-mono">
            <div class="text-green-400 text-lg sm:text-2xl mb-3 sm:mb-4 overflow-x-auto">
              <span class="text-blue-400">$</span> <span class="whitespace-nowrap">./collaborate --with=kevin</span>
            </div>
            <div class="text-gray-300 text-base sm:text-lg mb-6 sm:mb-8 max-w-2xl mx-auto px-2">
              # Ready to build something awesome together?
            </div>
            <a
              href="/contact"
              class="inline-block bg-green-400/20 border border-green-400/50 text-green-400 hover:text-black hover:bg-green-400 font-medium py-2.5 sm:py-3 px-6 sm:px-8 transition-all text-sm sm:text-base whitespace-nowrap"
            >
              ./contact --kevin
            </a>
          </div>
        </div>
      </section>
    </div>
</BaseLayout>

<script>
  // Project filtering functionality
  document.addEventListener('DOMContentLoaded', () => {
    const filterBtns = document.querySelectorAll('.filter-btn');
    const projectItems = document.querySelectorAll('.project-item');

    filterBtns.forEach(btn => {
      btn.addEventListener('click', () => {
        const filter = btn.getAttribute('data-filter');

        // Update active button
        filterBtns.forEach(b => {
          b.classList.remove('active', 'text-green-400', 'border-green-400/50', 'bg-green-400/10');
          b.classList.add('text-gray-400', 'border-gray-600');
        });
        btn.classList.add('active', 'text-green-400', 'border-green-400/50', 'bg-green-400/10');
        btn.classList.remove('text-gray-400', 'border-gray-600');

        // Filter projects
        projectItems.forEach(item => {
          const htmlItem = item as HTMLElement;
          if (filter === 'all' || item.getAttribute('data-category') === filter) {
            htmlItem.style.display = 'block';
          } else {
            htmlItem.style.display = 'none';
          }
        });
      });
    });
  });
</script>
